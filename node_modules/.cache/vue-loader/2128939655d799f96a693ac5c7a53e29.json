{"remainingRequest":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dell\\Desktop\\Full_Version\\src\\components\\featured\\index.vue?vue&type=style&index=0&id=c2e7ed7e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\src\\components\\featured\\index.vue","mtime":1659969786602},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\css-loader\\dist\\cjs.js","mtime":1659972865126},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1659972866505},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\postcss-loader\\src\\index.js","mtime":1659972865655},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659972864654},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\vue-loader\\lib\\index.js","mtime":1659972866064}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5iZy13YWVsIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/featured","sourcesContent":["<template>\n  <header :class=\"theme\">\n    <div class=\"container\">\n      <div class=\"col-md-8 mb-3\">\n        <p>{{ $t(\"featured.text\") }}</p>\n\n        <search-form v-if=\"map\" @place-changed=\"handlePlaceChange\" />\n      </div>\n      <div class=\"col-md-12\">\n        <maps\n          :center=\"center\"\n          :zoom=\"zoom\"\n          :key=\"center.lat\"\n          :events=\"events\"\n          @map-loaded=\"handleMapLoaded\"\n          @position-marked=\"handlePositionMarking\"\n          @add-to-comparaison=\"handleAddToComparaison\"\n          @update-events=\"handleUpdateEvents\"\n        />\n      </div>\n      <p class=\"lead col-md-12 mt-2\">\n        <i class=\"fa fa-map-marker text-success mr-1\"></i>\n        <small>{{ $t(\"featured.legend_sport\") }}</small>\n        <i class=\"fa fa-map-marker text-danger ml-4 mr-1\"></i>\n        <small>{{ $t(\"featured.legend_cultural\") }}</small>\n      </p>\n    </div>\n  </header>\n</template>\n\n<script>\nimport SearchForm from \"@/components/featured/maps/search-form\";\nimport Maps from \"@/components/featured/maps/index.vue\";\nimport firebase from \"firebase\";\nexport default {\n  props: {\n    zoomProp: {\n      type: Number,\n      default: undefined,\n    },\n    centerProp: {\n      type: Object,\n      default: undefined,\n    },\n    theme: {\n      type: String,\n      default: \"bg-primary text-white\"\n    }\n  },\n  data() {\n    return {\n      map: null,\n      longitude: null,\n      latitude: null,\n      events: [],\n      center: { lat: 36.7951872, lng: 10.1941248 },\n      zoom: 12,\n      gmara: false\n    };\n  },\n  components: {\n    SearchForm,\n    Maps,\n  },\n  mounted() {\n    const firestore = firebase.firestore();\n    const collection = firestore.collection(\"events\");\n    collection\n      .get()\n      .then(({ docs }) => {\n        docs.forEach((event) => {\n          const position = {\n            lat: event.data().latitude,\n            lng: event.data().longitude,\n          };\n          const data = {\n            ...event.data(),\n          };\n          const sub = { position, data };\n          this.events.push(sub);\n        });\n      })\n      .catch((error) => console.log(error));\n  },\n  methods: {\n    handleMapLoaded(map) {\n      this.map = map;\n      if (this.centerProp !== undefined) {\n        this.center = this.centerProp;\n      }\n      if (this.zoomProp !== undefined) {\n        this.zoom = this.zoomProp;\n      }\n    },\n    handlePlaceChange(place) {\n      this.center = place.center;\n      this.zoom = place.zoom;\n    },\n    handlePositionMarking(position) {\n      this.longitude = position.longitude;\n      this.latitude = position.latitude;\n      this.gmara = true\n    },\n    handleAddToComparaison($event) {\n      this.$emit(\"add-to-comparaison\", $event);\n    },\n    handleUpdateEvents() {\n      const firestore = firebase.firestore();\n      const collection = firestore.collection(\"events\");\n      collection\n        .get()\n        .then(({ docs }) => {\n          docs.forEach((event) => {\n            const position = {\n              lat: event.data().latitude,\n              lng: event.data().longitude,\n            };\n            const data = {\n              ...event.data(),\n            };\n            const sub = { position, data };\n            this.events.push(sub);\n          });\n        })\n        .catch((error) => console.log(error));\n    },\n  },\n};\n</script>\n<style scoped>\n.bg-wael {\n  background-color: gray;\n}\n</style>"]}]}