{"remainingRequest":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dell\\Desktop\\Full_Version\\src\\components\\event\\data\\index.vue?vue&type=style&index=0&id=1d0833d2&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\src\\components\\event\\data\\index.vue","mtime":1659970386316},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\css-loader\\dist\\cjs.js","mtime":1659972865126},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1659972866505},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\postcss-loader\\src\\index.js","mtime":1659972865655},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659972864654},{"path":"C:\\Users\\dell\\Desktop\\Full_Version\\node_modules\\vue-loader\\lib\\index.js","mtime":1659972866064}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi53aXRoLXBvaW50ZXIgewogIGN1cnNvcjogcG9pbnRlcjsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/event/data","sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"eventDetailsModal\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5\n            :class=\"`modal-title with-pointer ${\n              step === 'COMMENTS' ? 'text-muted' : ''\n            }`\"\n            @click=\"handleSetStep('DETAILS')\"\n          >\n            Details\n          </h5>\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n            @click=\"handleToggleModal\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <report v-show=\"step === 'DETAILS'\" v-if=\"event\" :event=\"event\" />\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            @click=\"handleToggleModal\"\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            @click=\"handleAddUpdate(event)\"\n          >\n            Update\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst $ = window.$\nimport Report from './report'\nimport firebase from 'firebase'\nimport { randomString } from '@/utils'\nimport { RANDOM_CARTOON_AVATAR_URL } from '@/constants'\nexport default {\n  props: {\n    eventProp: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  components: {\n    Report,\n  },\n  data() {\n    return {\n      event: undefined,\n      step: 'DETAILS',\n      displayName: undefined,\n      photoURL: undefined,\n      userId: undefined,\n      loading: false,\n    }\n  },\n  mounted() {\n    if (this.eventProp) {\n      this.event = this.eventProp\n    }\n\n    this.displayName = 'Guest_' + randomString(5)\n    this.photoURL =\n      RANDOM_CARTOON_AVATAR_URL + Math.floor(Math.random() * 100) + '.png'\n\n    const user = firebase.auth().currentUser\n    if (user && user.displayName) {\n      this.displayName = user.displayName\n    }\n    if (user && user.photoURL) {\n      this.photoURL = user.photoURL\n    }\n    if (user && user.uid) {\n      this.userId = user.uid\n    }\n  },\n  methods: {\n    handleSetStep(step) {\n      this.step = step\n    },\n    handleToggleModal() {\n      $('#eventDetailsModal').modal('toggle')\n    },\n    handleAddUpdate(event) {\n      this.handleToggleModal()\n      this.$emit('add-to-comparaison', event)\n    },\n    handleAddComment($event) {\n      const comment = {\n        text: $event,\n        id: randomString(15),\n        displayName: this.displayName,\n        creationTime: new Date().getTime(),\n        photoURL: this.photoURL,\n      }\n      if (this.userId) {\n        comment['userId'] = this.userId\n      }\n      const comments = [...this.event.comments, comment]\n      const firestore = firebase.firestore()\n      const collection = firestore.collection('events')\n      this.loading = true\n      collection\n        .doc(this.event.id)\n        .update({\n          comments,\n        })\n        .then(() => {\n          collection\n            .doc(this.event.id)\n            .get()\n            .then((response) => {\n              this.event = response.data()\n              this.$emit('update-events')\n              this.loading = false\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    },\n  },\n}\n</script>\n\n<style scoped>\n.with-pointer {\n  cursor: pointer;\n}\n</style>\n"]}]}